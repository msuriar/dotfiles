if v:lang =~ "utf8$" || v:lang =~ "UTF-8$"
	set fileencodings=utf-8,latin1
endif

" Set modelines to non-zero value to work around OSX system default.
set modelines=1

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()
" Enable syntax highlighting options. Need to disable/reenable for pathogen.
filetype off
filetype plugin indent on
syntax enable


" Enable per directory .vimrc files as required
set exrc

" Display behaviour
set nocompatible	" use vim defaults
set number				" Always show line numbers
set ruler					" Always show ruler
set showcmd				" Always show commands
set laststatus=2  " Always use a statusbar
set title
set background=dark
colorscheme solarized

" Buffer behaviour
set hidden
" Change directory to the one containing the file open in the current buffer.
autocmd BufEnter * lcd %:p:h

" Search behaviour
set incsearch
set nohlsearch
set ignorecase
set smartcase

" Scrolling behaviour
set scrolloff=50
" Scroll three lines at a time
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

" Unmap backspace in insert mode. Use vi motions.
imap <BS> <Nop>

" History, marks, etc
set viminfo='100,f1
set history=1000

" Wildcard completion - complete longest common substring
set wildmenu
set wildmode=longest:full
set wildignore+=*.pyc

" Clipboard behaviour
set clipboard=exclude:.* " don't try and query X server

"flag problematic whitespace (trailing and spaces before tabs)
"Note you get the same by doing let c_space_errors=1 but
"this rule really applys to everything.
highlight RedundantSpaces term=standout ctermbg=red guibg=red
match RedundantSpaces /\s\+$\| \+\ze\t/ "\ze sets end of match so only spaces highlighted

"use :set list! to toggle visible whitespace on/off
set listchars=tab:>-,trail:.,extends:>

" Tab behaviour
set tabstop=2
set shiftwidth=2
set expandtab

" Line length
set textwidth=79

" Show matching brackets
set showmatch
set matchtime=3

" Spell checking
" zg = add word to dict
" zw = mark word as not spelled correctly (remove)
set spell spelllang=en_gb
set spellfile=~/.vim/dict.add

" Swapfiles in ~/tmp
set backupdir=~/tmp,/tmp
set directory=~/tmp,/tmp

" Mappings
let mapleader=","

" Double semicolon for escape
inoremap ;; <ESC>
cnoremap ;; <C-c>

" Unmap escape and ^C to get out of the habit of using them
map <C-C> <Nop>
imap <C-C> <Nop>

" Quickly insert newlines
nmap <CR> o<ESC>

" Swap backtick and quote, since backtick is more useful when it comes to
" marks, but quote is more reachable
nnoremap ' `
nnoremap ` '

" leader stuff for toggling interesting things.

nmap <silent><leader>H :setlocal hlsearch! hlsearch? <CR>
nmap <silent><leader>L :setlocal list! list? <CR>
nmap <silent><leader>n :setlocal number! number? <CR>
nmap <silent><leader>P :set paste! paste? <CR>
nmap <silent><leader>s :setlocal spell! spelllang=en_gb spell? <CR>

" Modify .vimrc and reload it.
map <leader>v :sp ~/.vimrc<CR><C-W>_
map <silent><leader>V :source ~/.vimrc <CR>:filetype detect <CR>:exe ":echo ':echo vimrc reloaded'"<CR>

" Buffer and split navigation
let g:LustyJugglerSuppressRubyWarning = 1
nmap <silent><leader>b :LustyJuggler <CR>

" Move between splits easily
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" use - and + to resize horizontal splits
map - <C-W>-
map + <C-W>+

" and for vsplits with alt-< or alt->
map <M-,> <C-W>>
map <M-.> <C-W><

" Registers
nmap <leader>r :registers <CR>
" map the various registers to a leader shortcut for pasting from them
nmap <leader>0 "0p
nmap <leader>1 "1p
nmap <leader>2 "2p
nmap <leader>3 "3p
nmap <leader>4 "4p
nmap <leader>5 "5p
nmap <leader>6 "6p
nmap <leader>7 "7p
nmap <leader>8 "8p
nmap <leader>9 "9p
